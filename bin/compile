#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_NAME=vips
BIN_DIR=$(cd "$(dirname "$0")"; pwd) # absolute path
ROOT_DIR=$(dirname "$BIN_DIR")

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

arrow() {
  sed -u 's/^/-----> /'
}

ADD_PATH=""

function vendor() {
  binary="$1"
  path="$2"

  echo "Fetching $binary" | indent
  mkdir -p $path
  tar -xz -f $binary -C $path

  if [ -d "$path/bin" ]; then
    ADD_PATH="$path/bin"
  else
    ADD_PATH=""
  fi

  if [ -d "$path/lib/pkgconfig" ]; then
    # pkg-config should handle compiler options (if used)
    ADD_PKG_CONFIG_PATH="$path/lib/pkgconfig"
  else
    ADD_PKG_CONFIG_PATH=""
  fi

  # standard paths
  ADD_CPPPATH="$path/include"
  ADD_CPATH="$path/include"
  ADD_LIBRARY_PATH="$path/lib"

  ADD_LD_LIBRARY_PATH="$path/lib"
}

echo "Vendoring binaries" | arrow

vendor "${ROOT_DIR}/build/${STACK}.tar.gz" "$BUILD_DIR/vendor/vips"

echo "Configuring build environment" | arrow

cat <<EOF > export
export PATH="/app/bin:$ADD_PATH:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$ADD_LD_LIBRARY_PATH"
export LIBRARY_PATH="\$LIBRARY_PATH:$ADD_LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$ADD_PKG_CONFIG_PATH"
export CPPPATH="\$CPPPATH:$ADD_CPPPATH"
export CPATH="\$CPATH:$ADD_CPATH"
EOF

echo "Building runtime environment" | arrow
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > $BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh
export PATH="/app/bin:${ADD_PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${ADD_LD_LIBRARY_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${ADD_LIBRARY_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${ADD_PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${ADD_CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${ADD_CPATH//$BUILD_DIR//app}"
EOF
